{"version":3,"sources":["_typography.scss","libraries/_mixins.scss","_header.scss","_footer.scss","_main.scss","_home.scss"],"names":[],"mappings":"AACA,OAAS,QAAA,KAAA,EAAoB,QACnB,QAAA,IAAA,EAAmB,WAChB,UAAA,KAAyB,YC8UlC,UAAA,KACA,iCD9UJ,YC+UQ,UAAA,MD9UR,WC4UI,UAAA,KACA,iCD7UJ,WC8UQ,UAAA,MD7UR,YC2UI,UAAA,KACA,iCD5UJ,YC6UQ,UAAA,MD5UR,aC0UI,UAAA,KACA,iCD3UJ,aC4UQ,UAAA,MD3UR,SCyUI,UAAA,KACA,iCD1UJ,SC2UQ,UAAA,MClVR,KAAA,KAAa,OAAA,KAAa,WAAA,KAAmB,EAG3C,OAAA,EACD,OAGC,WAAA,QACA,MAAA,KACD,OCRC,QAAA,EACA,SAAA,SACA,WAAA,QACA,MAAA,KACD,gBCJC,MAAA,KACA,WAAA,KACD,SAAA,SACA,mBAAA,SAAA,sBAAA,OAAA,eAAA,OACC,QAAA,YAAA,QAAA,KACA,QAAA,EAED,KAGC,mBAAA,SAAA,sBAAA,OAAA,eAAA,OACA,SAAA,SACA,iBAAA,EAAA,KAAA,EAAA,EAAA,KACA,QAAA,EACD,MAEO,SAAA,SAAqB,MAAA,EAAA,OAAA,mBHd3B,mBAAA,IAAA,IAAA,KAIQ,WAAA,IAAA,IAAA,KGWkE,OHf1E,mBAAA,IAAA,IAAA,KAIQ,WAAA,IAAA,IAAA,KGYqC,QACrC,SAAA,SAAmB,SAAA,OAAmB,MACxC,UAAA,OAAqB,YAAA,KAAmB,aAAA,KAAsB,UAC1D,MAAA,KAAa,OAAA,KAAgB,KAElC,QAAA,EAAc,KACd,QAAA,EAAc,KACd,QAAA,EAAc,KACd,QAAA,EAAc,KACd,QAAA,EAAc,KACd,QAAA,EAAc,UACT,SAAA,OAAoB,MACxB,aAAA,EAAmB,MACnB,cAAA,EAAoB,MChC1B,QAAA,YAAA,QAAA,KACD,MAGC,QAAA,YAAA,QAAA,KACA,iBAAA,EAAA,KAAA,EAAA,EAAA,KACA,iBAAA,OAAA,gBAAA,OACA,kBAAA,OAAA,YAAA,OACA,WAAA,QACA,MAAA","file":"style.css","sourcesContent":["// includes all tags for paragraphs and titles such as header, p, span\r\n.par p { padding:10px 0px; }\r\n.par2 p { padding:5px 0px; }\r\n.par-small { font-size: $fontSmall; }\r\n.par-medium { @include responsive-font-size (12px, 14px, 768px, 1200px, 0px); }\r\n.par-large { @include responsive-font-size (13px, 16px, 768px, 1200px, 0px); }\r\n.par-xlarge { @include responsive-font-size (14px, 18px, 768px, 1200px, 0px); }\r\n.par-xxlarge { @include responsive-font-size (16px, 20px, 768px, 1200px, 0px); }\r\n.par-max { @include responsive-font-size (20px, 24px, 768px, 1200px, 0px); }\r\n\r\n// :root {\r\n// font-size: 16px;\r\n// }\r\n\r\n// Font Variables\r\n$font10   :   \t0.625rem;\r\n$font11   :   \t0.6875rem;\r\n$font12   :    \t0.75rem;\r\n$font13   : \t  0.8125rem;\r\n$font14   : \t\t0.875rem;\r\n$font15   : \t\t0.9375rem;\r\n$font16   : \t\t1rem;\r\n$font17   : \t\t1.0625rem;\r\n$font18   : \t\t1.125rem;\r\n$font19   : \t\t1.1875rem;\r\n$font20   : \t\t1.25rem;\r\n$font21   : \t\t1.3125rem;\r\n$font22   : \t\t1.375rem;\r\n$font23   : \t\t1.4375rem;\r\n$font24   : \t\t1.5rem;\r\n$font25   : \t\t1.5625rem;\r\n$font26   : \t\t1.625rem;\r\n$font27   : \t\t1.6875rem;\r\n$font28   : \t\t1.75rem;\r\n$font29   : \t\t1.8125rem;\r\n$font30   : \t\t1.875rem;\r\n$font31   : \t\t1.9375rem;\r\n$font32   : \t\t2rem;\r\n$font33   : \t\t2.0625rem;\r\n$font34   : \t\t2.125rem;\r\n$font35   :   \t2.1875rem;\r\n$font36   : \t\t2.25rem;\r\n$font37   : \t\t2.3125rem;\r\n$font38   :   \t2.375rem;\r\n$font39   : \t\t2.4375rem;\r\n$font40   : \t\t2.5rem;\r\n$font41   : \t  2.5625rem;\r\n$font42   :   \t2.625rem;\r\n$font43   :   \t2.6875rem;\r\n$font44   : \t\t2.75rem;\r\n$font45   : \t\t2.8125rem;\r\n$font46   : \t\t2.875rem;\r\n$font47   :   \t2.9375rem;\r\n$font48   : \t\t3rem;\r\n$font49   : \t\t3.0625rem;\r\n$font50   : \t  3.125rem;\r\n$font51   : \t\t3.1875rem;\r\n$font52   : \t\t3.25rem;\r\n$font53   : \t\t3.3125rem;\r\n$font54   : \t  3.375rem;\r\n$font55   :   \t3.4375rem;\r\n$font56   : \t\t3.5rem;\r\n$font57   : \t\t3.5625rem;\r\n$font58   : \t\t3.625rem;\r\n$font59   : \t\t3.6875rem;\r\n$font60   : \t\t3.75rem;\r\n$font61   : \t\t3.8125rem;\r\n$font62   :   \t3.875rem;\r\n$font63   : \t\t3.9375rem;\r\n$font64   : \t\t4rem;\r\n","// groups of multiplied css like CSS3 for cross browsing\r\n\r\n// for css3 transition\r\n@mixin transition($args...) {\r\n  -webkit-transition: $args;\r\n     -moz-transition: $args;\r\n      -ms-transition: $args;\r\n       -o-transition: $args;\r\n          transition: $args;\r\n}\r\n// example use\r\n//.class-name { @include transition(all 0.5s ease); }\r\n\r\n\r\n// for css3 transition delay\r\n@mixin transition-delay($args...) {\r\n  -webkit-transition-delay: $args;\r\n     -moz-transition-delay: $args;\r\n      -ms-transition-delay: $args;\r\n       -o-transition-delay: $args;\r\n          transition-delay: $args;\r\n}\r\n// example use\r\n//.class-name { @include transition(all 0.5s ease); }\r\n\r\n\r\n// for css3 transform\r\n@mixin transform($transform...) {\r\n  -webkit-transform: $transform;\r\n     -moz-transform: $transform;\r\n      -ms-transform: $transform;\r\n       -o-transform: $transform;\r\n          transform: $transform;\r\n}\r\n// example use\r\n//.class-name { @include transition(all 0.5s ease); }\r\n\r\n\r\n// for css3 transform style\r\n@mixin transform-style($transform-style...) {\r\n  -webkit-transform: $transform-style;\r\n     -moz-transform: $transform-style;\r\n      -ms-transform: $transform-style;\r\n       -o-transform: $transform-style;\r\n          transform: $transform-style;\r\n}\r\n// example use\r\n//.class-name { @include transform-style(preserve-3d); }\r\n\r\n\r\n//transform origin\r\n@mixin transform-origin ($origin) {\r\n  moz-transform-origin: $origin;\r\n     -o-transform-origin: $origin;\r\n    -ms-transform-origin: $origin;\r\n-webkit-transform-origin: $origin;\r\n        transform-origin: $origin;\r\n}\r\n\r\n\r\n// for css3 animation\r\n@mixin keyframes($animation-name) {\r\n  @-webkit-keyframes #{$animation-name} { @content; }\r\n     @-moz-keyframes #{$animation-name} { @content; }\r\n      @-ms-keyframes #{$animation-name} { @content; }\r\n       @-o-keyframes #{$animation-name} { @content; }\r\n          @keyframes #{$animation-name} { @content; }\r\n}\r\n\r\n@mixin animation($str...) {\r\n  -webkit-animation: #{$str};\r\n     -moz-animation: #{$str};\r\n      -ms-animation: #{$str};\r\n       -o-animation: #{$str};\r\n          animation: #{$str};\r\n}\r\n// for example use\r\n// @include keyframes(animationName) {\r\n//   0% { opacity: 1; }\r\n//   90% { opacity: 0; }\r\n// }\r\n// .class-name {\r\n//   @include animation('animationName 5s 3');\r\n// }\r\n\r\n\r\n@mixin animation-delay($animdelay) {\r\n  -webkit-animation-delay: #{$animdelay};\r\n     -moz-animation-delay: #{$animdelay};\r\n      -ms-animation-delay: #{$animdelay};\r\n       -o-animation-delay: #{$animdelay};\r\n          animation-delay: #{$animdelay};\r\n}\r\n\r\n@mixin animation-duration($animDuration) {\r\n  -webkit-animation-duration: #{$animDuration};\r\n     -moz-animation-duration: #{$animDuration};\r\n      -ms-animation-duration: #{$animDuration};\r\n       -o-animation-duration: #{$animDuration};\r\n          animation-duration: #{$animDuration};\r\n}\r\n\r\n@mixin animation-fill-mode($fillmode) {\r\n  -webkit-animation-fill-mode: #{$fillmode};\r\n     -moz-animation-fill-mode: #{$fillmode};\r\n      -ms-animation-fill-mode: #{$fillmode};\r\n       -o-animation-fill-mode: #{$fillmode};\r\n          animation-fill-mode: #{$fillmode};\r\n}\r\n// @include animation-fill-mode(forwards);\r\n\r\n@mixin animation-timing-function($timingFunction) {\r\n  -webkit-animation-timing-function: $timingFunction;\r\n     -moz-animation-timing-function: $timingFunction;\r\n      -ms-animation-timing-function: $timingFunction;\r\n       -o-animation-timing-function: $timingFunction;\r\n          animation-timing-function: $timingFunction;\r\n}\r\n// @include animation-timing-function(cubic-bezier(0,0,0,0));\r\n\r\n// for border radius\r\n@mixin border-radius($radius) {\r\n  -webkit-border-radius: $radius;\r\n     -moz-border-radius: $radius;\r\n      -ms-border-radius: $radius;\r\n          border-radius: $radius;\r\n}\r\n// example use\r\n//.class-name { @include border-radius(10px); }\r\n\r\n\r\n// for input appearance\r\n@mixin appearance($appearance) {\r\n  -webkit-appearance: $appearance;\r\n     -moz-appearance: $appearance;\r\n          appearance: $appearance;\r\n}\r\n// example use\r\n//.class-name { @include appearance(none); }\r\n\r\n\r\n// for user select\r\n@mixin user-select($userselect) {\r\n  -webkit-user-select: $userselect;\r\n     -moz-user-select: $userselect;\r\n      -ms-user-select: $userselect;\r\n          user-select: $userselect;\r\n}\r\n// example use\r\n//.class-name { @include user-select(none); }\r\n\r\n\r\n// for pointer events\r\n@mixin pointer-events($pointerevents) {\r\n  -webkit-pointer-events: $pointerevents;\r\n     -moz-pointer-events: $pointerevents;\r\n      -ms-pointer-events: $pointerevents;\r\n          pointer-events: $pointerevents;\r\n}\r\n// example use\r\n//.class-name { @include pointer-events(none); }\r\n\r\n\r\n// for box sizing\r\n@mixin box-sizing($boxsizing) {\r\n  -webkit-box-sizing: $boxsizing;\r\n     -moz-box-sizing: $boxsizing;\r\n      -ms-box-sizing: $boxsizing;\r\n          box-sizing: $boxsizing;\r\n}\r\n// example use\r\n//.class-name { @include pointer-events(none); }\r\n\r\n\r\n// for placeholder\r\n@mixin optional-at-root($sel) {\r\n  @at-root #{if(not &, $sel, selector-append(&, $sel))} { @content; }\r\n}\r\n@mixin placeholder {\r\n  @include optional-at-root('::-webkit-input-placeholder') { @content; }\r\n  @include optional-at-root(':-moz-placeholder') { @content; }\r\n  @include optional-at-root('::-moz-placeholder') { @content; }\r\n  @include optional-at-root(':-ms-input-placeholder') { @content; }\r\n}\r\n\r\n\r\n// for opacity\r\n@mixin opacity($opacity) {\r\n  opacity: $opacity;\r\n  $opacity-ie: $opacity * 100;\r\n  filter: alpha(opacity=$opacity-ie); //IE8\r\n}\r\n// example use\r\n//.class-name { @include opacity(0.8); }\r\n\r\n\r\n// for backface visibility\r\n@mixin backface-visibility($backface) {\r\n  -webkit-backface-visibility: $backface;\r\n     -moz-backface-visibility: $backface;\r\n      -ms-backface-visibility: $backface;\r\n          backface-visibility: $backface;\r\n}\r\n// example use\r\n// @include backface-visibility(hidden);\r\n\r\n\r\n// for background linear gradient\r\n@mixin linear-gradient($direction, $color-stops...) {\r\n  background: nth(nth($color-stops, 1), 1);\r\n  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\r\n  background: linear-gradient($direction, $color-stops);\r\n}\r\n// example use\r\n//@include linear-gradient(hotpink, tomato);\r\n\r\n// for REM font sizes\r\n$rem-baseline: 16px !default;\r\n$rem-fallback: false !default;\r\n$rem-px-only: false !default;\r\n\r\n@function rem-separator($list, $separator: false) {\r\n  @if $separator == \"comma\" or $separator == \"space\" {\r\n    @return append($list, null, $separator);\r\n  } \r\n  \r\n  @if function-exists(\"list-separator\") == true {\r\n    @return list-separator($list);\r\n  }\r\n\r\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\r\n  $test-list: ();\r\n  @each $item in $list {\r\n    $test-list: append($test-list, $item, space);\r\n  }\r\n\r\n  @return if($test-list == $list, space, comma);\r\n}\r\n\r\n@mixin rem-baseline($zoom: 100%) {\r\n  font-size: $zoom / 16px * $rem-baseline;\r\n}\r\n\r\n@function rem-convert($to, $values...) {\r\n  $result: ();\r\n  $separator: rem-separator($values);\r\n  \r\n  @each $value in $values {\r\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\r\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\r\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\r\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\r\n    } @else if type-of($value) == \"list\" {\r\n      $value-separator: rem-separator($value);\r\n      $value: rem-convert($to, $value...);\r\n      $value: rem-separator($value, $value-separator);\r\n      $result: append($result, $value, $separator);\r\n    } @else {\r\n      $result: append($result, $value, $separator);\r\n    }\r\n  }\r\n\r\n  @return if(length($result) == 1, nth($result, 1), $result);\r\n}\r\n\r\n@function rem($values...) {\r\n  @if $rem-px-only {\r\n    @return rem-convert(px, $values...);\r\n  } @else {\r\n    @return rem-convert(rem, $values...);\r\n  }\r\n}\r\n\r\n@mixin rem($properties, $values...) {\r\n  @if type-of($properties) == \"map\" {\r\n    @each $property in map-keys($properties) {\r\n      @include rem($property, map-get($properties, $property));\r\n    }\r\n  } @else {\r\n    @each $property in $properties {\r\n      @if $rem-fallback or $rem-px-only {\r\n        #{$property}: rem-convert(px, $values...);\r\n      }\r\n      @if not $rem-px-only {\r\n        #{$property}: rem-convert(rem, $values...);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// for REM font sizes\r\n@function calculateRem($size) {\r\n  $remSize: $size / 16px;\r\n  @return #{$remSize}rem;\r\n}\r\n\r\n@mixin font-size($size) {\r\n  font-size: $size; //Fallback in px\r\n  font-size: calculateRem($size);\r\n}\r\n\r\n// html {\r\n//   @include breakpoint(md) {\r\n//     font-size: 12px;\r\n//   };\r\n// }\r\n// h1 { font-size: rem(12px); width: rem(200px) }\r\n\r\n// Gray scale\r\n@mixin gray-scale($value) {\r\n    -webkit-filter: #{\"grayscale(#{$value})\"};\r\n    -moz-filter: #{\"grayscale(#{$value})\"};\r\n    filter:#{\"grayscale(#{$value})\"};\r\n}\r\n\r\n// @include gray-scale(100%);\r\n\r\n// Brightness\r\n@mixin brightness($value) {\r\n    -webkit-filter: #{\"brightness(#{$value})\"};\r\n    -moz-filter: #{\"brightness(#{$value})\"};\r\n    filter:#{\"brightness(#{$value})\"};\r\n}\r\n\r\n// @include brightness(100%);\r\n\r\n//for sticky position\r\n@mixin position($position) {\r\n  -webkit-position: $position;\r\n     -moz-position: $position;\r\n      -ms-position: $position;\r\n          position: $position;\r\n}\r\n// .class-name { @include position(sticky); }\r\n\r\n// for responsive font\r\n@mixin responsive-font-size($min-font-size, $max-font-size, $min-screen-width, $max-screen-width, $font-size-step: 0.1em) {\r\n    font-size: $max-font-size;\r\n    @media all and (max-width: $min-screen-width) {\r\n        font-size: $min-font-size;\r\n    }\r\n    @if $font-size-step <= 0 {\r\n\r\n    }\r\n    @else {\r\n        $min-scale-factor: $min-font-size / $min-screen-width / 1em * 1px;\r\n        $max-scale-factor: $max-font-size / $max-screen-width / 1em * 1px;\r\n        $screen-width: round($max-screen-width);\r\n        $font-size: $max-font-size;\r\n        @while $screen-width >= $min-screen-width {\r\n            $progress: ($screen-width - $min-screen-width) / ($max-screen-width - $min-screen-width);\r\n            $scale-factor: $min-scale-factor + $progress * ($max-scale-factor - $min-scale-factor);\r\n            $font-size: $screen-width * $scale-factor / 1px * 1em;\r\n            @media all and (max-width: $screen-width) {\r\n                font-size: $font-size;\r\n            }\r\n            $screen-width-step: $font-size-step / $scale-factor / 1em * 1px;\r\n            @if $screen-width-step < 1px {\r\n                $screen-width-step: 1px;\r\n            }\r\n            $screen-width: round($screen-width - $screen-width-step);\r\n        }\r\n    }\r\n}\r\n// example use\r\n// .class-name { @include responsive-font-size (12px, 14px, 640px, 1200px, 0px); }\r\n\r\n// for responsive or so called media queries or breakpoints\r\n// you can adjust it anytime depending on the max width of the content\r\n@mixin breakpoint($point) {\r\n  @if $point == maxwidth {\r\n    @media (max-width: $maxWidth) { @content; }\r\n  }\r\n  @else if $point == xl {\r\n    @media (max-width: 1200px) { @content; }\r\n  }\r\n  @else if $point == lg {\r\n    @media (max-width: 992px) { @content; }\r\n  }\r\n  @else if $point == md {\r\n    @media (max-width: 768px) { @content; }\r\n  }\r\n  @else if $point == sm {\r\n    @media (max-width: 576px) { @content; }\r\n  }\r\n  @else if $point == xs {\r\n    @media (max-width: 540px) { @content; }\r\n  }\r\n}\r\n// example use\r\n// @include breakpoint(tablet) {\r\n//  / put your css here /\r\n// }\r\n\r\n// Example of lang parameter\r\n// html[lang=\"en\"] { css content here }\r\n\r\n@mixin fontface($fontname, $fonturl, $fontweight:null, $fontstyle:null ) {\r\n  @font-face{\r\n    font-family: $fontname;\r\n    src: url($fonturl+'.eot');\r\n    src: url($fonturl+'.woff') format('woff'),\r\n    url($fonturl+'.ttf') format('truetype'),\r\n    url($fonturl+'.otf') format('opentype'),\r\n    url($fonturl+'.svg') format('svg'),\r\n    url($fonturl+'.eot?#iefix') format('embedded-opentype');\r\n    @if($fontweight){\r\n      font-weight: $fontweight;\r\n    }@else{\r\n      font-weight: normal;\r\n    }\r\n\r\n    @if($fontstyle){\r\n      font-style: $fontstyle;\r\n    }\r\n    @else{\r\n      font-style: normal;\r\n    }\r\n  }\r\n}\r\n\r\n// Description: Import local and customized webfonts\r\n\r\n// ## Usage:\r\n// @include fontface('FONT FACE NAME', '../directory/fontfilename')\r\n\r\n// ## Output Sample:\r\n// @font-face {\r\n//    font-family: 'Helvetica';\r\n//    src: url('fonts/Helvetica/HelveticaNeueCE-Thin.eot');\r\n//    src: url('fonts/Helvetica/HelveticaNeueCE-Thin.woff') format('woff'),\r\n//    url('fonts/Helvetica/HelveticaNeueCE-Thin.ttf') format('truetype'),\r\n//    url('fonts/Helvetica/HelveticaNeueCE-Thin.svg#Riffic') format('svg'),\r\n//    url('fonts/Helvetica/HelveticaNeueCE-Thin.eot?#iefix') format('embedded-opentype');\r\n//    font-weight: normal;\r\n//    font-style: normal;\r\n//}\r\n\r\n@mixin opacity($opacity) {\r\n  opacity: $opacity;\r\n  $opacity-ie: $opacity * 100;\r\n  filter: alpha(opacity=$opacity-ie); //IE8\r\n}\r\n// Usage\r\n// .faded-text {\r\n//   @include opacity(0.8);\r\n// }\r\n","// ionclude all your related style here in the header, you can leave it empty if the page has no header\r\nhtml, body { height:100%; min-height:100%; }\r\n\r\np {\r\n  margin: 0;\r\n}\r\n\r\nheader {\r\n  background: darken($color: $coAsh, $amount: 20%);\r\n  color: $coWhite;\r\n}\r\n","// ionclude all your related style here in the footer, you can leave it empty if the page has no footer\r\nfooter { \r\n  z-index: 2; \r\n  position: relative; \r\n  background: darken($color: $coAsh, $amount: 20%);\r\n  color: $coWhite;\r\n}\r\n\r\n","// this is area is for reserved class\r\n#main-container { \r\n  width: 100%;\r\n  min-height: 100%;\r\n\tposition: relative;\r\n\tflex-direction: column;\r\n  display: flex;\r\n  z-index: 1;\r\n\r\n}\r\n\r\nmain {\r\n  flex-direction: column;\r\n  position: relative;\r\n  flex: 1 1 auto;\r\n  z-index: 1;\r\n}\r\n\r\n.hide { position:relative; }\r\n.ease,a,input[type=\"submit\"],button { @include transition(all 0.5s ease); }\r\n.ease2 { @include transition(all 0.3s ease); }\r\n.loader { position:relative; overflow:hidden; }\r\n.auto { max-width:$maxWidth; margin-left: auto; margin-right: auto; }\r\n.img-auto { width: 100%; height: auto; }\r\n\r\n.zx1 { z-index: 1; }\r\n.zx2 { z-index: 2; }\r\n.zx3 { z-index: 3; }\r\n.zx4 { z-index: 4; }\r\n.zx5 { z-index: 5; }\r\n.zx6 { z-index: 6; }\r\n.overflow { overflow: hidden; }\r\n.pl-0 { padding-left: 0; }\r\n.pr-0 { padding-right: 0; }\r\n\r\n// this is area is for reserved class\r\n\r\n// you can include here the rest of your class name eg. home page\r\n",".main {\r\n  display: flex;\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: $coAsh;\r\n  color: $coWhite;\r\n}\r\n\r\n"]}